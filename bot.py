from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums import ParseMode
from dotenv import load_dotenv
import random
import asyncio
import os
    
# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()


TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()


names = ["–ì—Ä–∏–º–¥–æ—Ä", "–≠–ª–ª–∏–∞–Ω", "–†–∞–≥–Ω–∞—Ä", "–ú–æ—Ä—Ç–∏—É—Å", "–õ—é—Ü–∏—É—Å", "–ê—Ä–∏—è", "–¢–æ—Ä–∏–æ–Ω"]
races = ["–ß–µ–ª–æ–≤–µ–∫", "–≠–ª—å—Ñ", "–û—Ä–∫", "–ì–Ω–æ–º", "–¢—Ä–æ–ª–ª—å", "–î–µ–º–æ–Ω"]
classes = ["–í–æ–∏–Ω", "–ú–∞–≥", "–ü–∞–ª–∞–¥–∏–Ω", "–†–∞–∑–±–æ–π–Ω–∏–∫", "–õ—É—á–Ω–∏–∫", "–ñ—Ä–µ—Ü"]

def generate_stats():
    return {
        "‚öîÔ∏è –°–∏–ª–∞": random.randint(5, 20),
        "üèÉ‚Äç‚ôÇÔ∏è –õ–æ–≤–∫–æ—Å—Ç—å": random.randint(5, 20),
        "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç": random.randint(5, 20),
        "‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ": random.randint(20, 50),
    }


@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ RPG. "
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /create –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞."
    )


@dp.message(Command("create"))
async def create_character(message: Message):
    name = random.choice(names)
    race = random.choice(races) 
    cls = random.choice(classes)
    stats = generate_stats()

    text = f"""<b>–ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ–∑–¥–∞–Ω!</b>
<b>–ò–º—è:</b> {name}
<b>–†–∞—Å–∞: {race}</b>
<b>–ö–ª–∞—Å—Å: {cls}</b>
<b>–°—Ç–∞—Ç—ã: </b>
"""
    for stat, value in stats.items():
        text += f"{stat}: {value}\n"

    await message.answer(text, parse_mode=ParseMode.HTML)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())